{"version":3,"sources":["nav-logo.jpg","routes/home/home.jpeg","routes/home/home-about.png","serviceWorker.js","routes/home/Home.js","routes/aboutus/index.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","Image","src","home","Container","fluid","Row","Col","lg","md","xs","about","alt","Button","variant","React","Component","AboutUS","App","Navbar","fixed","expand","Brand","href","nav_logo","height","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","path","Schools","Downloads","Learning","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,0MCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kLCZOC,G,MAAb,uKAEQ,OACI,oCACA,yBAAKC,UAAU,sCACX,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAAMH,UAAU,gBAC5B,wBAAIA,UAAW,mBAAf,mCAEJ,kBAACI,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKN,UAAY,cAGjB,kBAACO,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACxB,kBAACT,EAAA,EAAD,CAASC,IAAKS,IAAOC,IAAI,GAAGP,OAAK,KAIjC,kBAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACpB,yDACA,ynBAA+lB,6BAAK,6BAApmB,IAA0mB,kBAACG,EAAA,EAAD,CAAQC,QAAQ,WAAhB,aAA6C,aAnB3qB,GAA0BC,IAAMC,YCHnBC,G,MAAb,uKAEQ,OACI,6BACI,gDAJhB,GAA6BF,IAAMC,YCqEpBE,MAxDf,WACE,OACE,kBAAC,IAAD,KACM,6BAEE,kBAACC,EAAA,EAAD,CAASnB,UAAY,YAAaoB,MAAM,MAAOC,OAAO,KAAKP,QAAQ,QAEjE,kBAACK,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAI,kBAACtB,EAAA,EAAD,CAAOC,IAAKsB,IAAUC,OAAS,UACtD,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAK9B,UAAU,WACb,kBAAC8B,EAAA,EAAIC,KAAL,CAAUR,KAAK,KAAf,QACA,kBAACO,EAAA,EAAIC,KAAL,CAAUR,KAAK,UAAf,SACA,kBAACO,EAAA,EAAIC,KAAL,CAAUR,KAAK,YAAf,WACA,kBAACO,EAAA,EAAIC,KAAL,CAAUR,KAAK,aAAf,qBACA,kBAACO,EAAA,EAAIC,KAAL,CAAUR,KAAK,cAAf,cAEF,kBAACS,EAAA,EAAD,CAAMC,QAAM,GAEN,kBAACpB,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,YAQV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoB,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAO,cACV,kBAACE,EAAD,OAEJ,kBAAC,IAAD,CAAOF,KAAO,aACX,kBAACG,EAAD,OAEH,kBAAC,IAAD,CAAOH,KAAO,UACT,iCAEL,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WAehB,SAASG,IACT,OACA,uDAOA,SAASF,IACT,OACA,4CAGA,SAASC,IACT,OACA,+CCrFAE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SJyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9dc5bdc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav-logo.d570712b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.541d13ca.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/home-about.362e3efe.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport home from './home.jpeg';\nimport about from './home-about.png';\nimport {Image,Button,Row,Col,Container,Media} from 'react-bootstrap'\nimport './Home.css';\n\nexport class Home extends React.Component {\n    render() {\n        return (\n            <>\n            <div className=\"container-fluid home-first-section\">\n                <Image src={home} className=\"home-bg-img\" />\n                <h1 className =\"welcoMessageCss\">WELCOME TO DSU DIGITAL LIBRARY</h1>\n            </div>\n            <Container fluid>\n                <Row className = \"home-about\">\n                \n                \n                <Col lg={6} md={12} xs={12}>\n                <Image   src={about} alt=\"\" fluid/>\n                </Col>\n                \n                \n                <Col lg={6} md={12} xs={12}>\n                    <h3>About DSU Digital Library</h3>\n                    <p >Books are chief instrument of Education and Library is center of intellectual life so the Dayananda Sagar University is proud of good and comprehensive University Library with most modern facilities catering to the academic needs of the students and teaching community. The Library has a huge collection of books, along with CD's and DVD's apart from latest Journals and Periodicals, along with this access to e-resources is also available through the Digital Library 'Think Centre' systems. DSU Digital Library Provides E-resources and other digital library services for users in a single search point.<br/><br/> <Button variant=\"warning\">Read More</Button>{' '}</p>\n                </Col>\n                \n                </Row>\n            </Container>\n            </>Â \n        )\n    }\n}","import React from 'react';\nimport './index.css'\n\nexport class AboutUS extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>hiiiiiiiiii</h1>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Image from 'react-bootstrap/Image'\nimport nav_logo from './nav-logo.jpg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from \"react-bootstrap\"\nimport { Home } from './routes/home/Home';\nimport { AboutUS } from './routes/aboutus';\n\n\nfunction App() {\n  return (\n    <Router>\n          <div>\n\n            <Navbar  className = \"navbarcss\"  fixed=\"top\"  expand=\"lg\" variant=\"dark\">\n\n              <Navbar.Brand href=\"/\"><Image src={nav_logo} height = \"50px\" /></Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <Nav.Link href=\"/\">Home</Nav.Link>\n                  <Nav.Link href=\"/about\">About</Nav.Link>\n                  <Nav.Link href=\"/schools\">Schools</Nav.Link>\n                  <Nav.Link href=\"/learning\">Learning Resource</Nav.Link>\n                  <Nav.Link href=\"/downloads\">Downloads</Nav.Link>\n                </Nav>\n                <Form inline>\n\n                      <Button variant=\"outline-warning\">Login</Button>\n                    </Form>\n              </Navbar.Collapse>\n            </Navbar>\n\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/about\">\n                <AboutUS />\n              </Route>\n              <Route path=\"/schools\">\n                <Schools />\n              </Route>\n              <Route path = \"/downloads\">\n                  <Downloads />\n               </Route>\n              <Route path = \"/learning\">\n                 <Learning />\n              </Route>\n              <Route path = \"/login\">\n                   <login />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n\n\n            </Switch>\n          </div>\n        </Router>\n  );\n}\n\n\n\nexport default App;\n\n\nfunction Learning(){\nreturn(\n<div>Learning Resource page</div>\n)}\nfunction login(){\nreturn(\n<div>login page</div>\n)}\n\nfunction Schools(){\nreturn(\n<div>School Page</div>\n)}\n\nfunction Downloads(){\nreturn(\n<div>Downloads page</div>\n)}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport XYX from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <XYX/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}